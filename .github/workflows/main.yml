name: Build iOS IPA

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-13
    
    steps:
    - uses: actions/checkout@v4
      
    - uses: subosito/flutter-action@v2
      with:
        channel: stable
        
    - name: Clean and get dependencies
      run: |
        flutter clean
        flutter pub get
        
    - name: Install pods
      run: |
        cd ios
        pod install
        
    - name: Install fastlane
      run: gem install fastlane
      
    - name: Debug Info.plist
      run: |
        echo "Checking Info.plist file:"
        ls -la ios/Runner/Info.plist
        echo "Content:"
        cat ios/Runner/Info.plist
        
    - name: Get Bundle ID
      id: bundle_id
      run: |
        echo "Attempting to read Bundle ID..."
        
        # 首先检查 Info.plist 是否包含变量而不是实际值
        BUNDLE_ID_RAW=$(cat ios/Runner/Info.plist | grep -A1 CFBundleIdentifier | grep string | sed 's/<[^>]*>//g' | xargs)
        echo "Raw Bundle ID from Info.plist: '$BUNDLE_ID_RAW'"
        
        # 如果包含变量，从 project.pbxproj 读取
        if [[ "$BUNDLE_ID_RAW" == *"PRODUCT_BUNDLE_IDENTIFIER"* ]] || [ -z "$BUNDLE_ID_RAW" ]; then
          echo "Bundle ID contains variable, reading from project.pbxproj..."
          BUNDLE_ID=$(grep "PRODUCT_BUNDLE_IDENTIFIER" ios/Runner.xcodeproj/project.pbxproj | head -1 | sed 's/.*PRODUCT_BUNDLE_IDENTIFIER = \([^;]*\);/\1/' | tr -d ' "')
          echo "Bundle ID from pbxproj: '$BUNDLE_ID'"
        else
          BUNDLE_ID="$BUNDLE_ID_RAW"
        fi
        
        # 如果还是包含变量或为空，手动设置
        if [[ "$BUNDLE_ID" == *"PRODUCT_BUNDLE_IDENTIFIER"* ]] || [ -z "$BUNDLE_ID" ]; then
          echo "Could not resolve Bundle ID automatically."
          BUNDLE_ID="com.example.runner"
          echo "Using fallback Bundle ID: $BUNDLE_ID"
        fi
        
        echo "bundle_identifier=$BUNDLE_ID" >> $GITHUB_OUTPUT
        echo "Final Bundle ID: $BUNDLE_ID"
        
    - name: Build IPA
      run: |
        cd ios
        echo "Bundle ID: $BUNDLE_ID"
        echo "Apple ID: $APPLE_ID"
        echo "Password set: $([[ -n $FASTLANE_PASSWORD ]] && echo 'yes' || echo 'no')"
        
        if [ -z "$APPLE_ID" ]; then
          echo "Error: APPLE_ID is not set. Please add it to repository secrets."
          exit 1
        fi
        
        if [ -z "$FASTLANE_PASSWORD" ]; then
          echo "Error: FASTLANE_PASSWORD is not set. Please check APPLE_PASSWORD secret."
          exit 1
        fi
        
        if [ -z "$BUNDLE_ID" ]; then
          echo "Error: Bundle ID is empty"
          exit 1
        fi
        
        echo "Running fastlane sigh..."
        fastlane sigh \
          --app_identifier "$BUNDLE_ID" \
          --username "$APPLE_ID" \
          --development \
          --force
        
        echo "Building with gym..."
        fastlane gym \
          --scheme "Runner" \
          --export_method "development" \
          --clean \
          --output_directory "./build" \
          --output_name "Runner.ipa"
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        FASTLANE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        BUNDLE_ID: ${{ steps.bundle_id.outputs.bundle_identifier }}
          
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: runner-ipa-${{ github.run_number }}
        path: ios/build/Runner.ipa
