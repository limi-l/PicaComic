name: Build iOS IPA
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-13
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: |
        sudo xcode-select --print-path
        xcodebuild -version
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        cache: true
        cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:
        cache-path: ${{ runner.tool_cache }}/flutter
        
    - name: Clean Flutter
      run: |
        flutter clean
        cd ios
        rm -rf Pods
        rm -f Podfile.lock
        cd ..
        
    - name: Flutter pub get
      run: flutter pub get
      
    - name: Patch Podfile for Swift Concurrency
      run: |
        echo 'post_install do |installer|' >> ios/Podfile
        echo '  installer.pods_project.targets.each do |target|' >> ios/Podfile
        echo '    flutter_additional_ios_build_settings(target)' >> ios/Podfile
        echo '    target.build_configurations.each do |config|' >> ios/Podfile
        echo '      config.build_settings["SWIFT_STRICT_CONCURRENCY"] = "minimal"' >> ios/Podfile
        echo '      config.build_settings["SWIFT_UPCOMING_FEATURE_CONCURRENCY"] = "NO"' >> ios/Podfile
        echo '    end' >> ios/Podfile
        echo '  end' >> ios/Podfile
        echo 'end' >> ios/Podfile
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install --repo-update
        
    - name: Install Ruby and Fastlane
      run: |
        gem install fastlane --user-install
        echo "$HOME/.gem/ruby/$(ruby -e 'puts RUBY_VERSION')/bin" >> $GITHUB_PATH
        
    - name: Get Bundle Identifier
      id: bundle_id
      run: |
        echo "Checking Info.plist file..."
        ls -la ios/Runner/Info.plist
        BUNDLE_ID=""
        BUNDLE_ID=$(/usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" ios/Runner/Info.plist 2>/dev/null || echo "")
        if [ -z "$BUNDLE_ID" ]; then
          BUNDLE_ID=$(plutil -p ios/Runner/Info.plist 2>/dev/null | grep CFBundleIdentifier | cut -d'"' -f4 || echo "")
        fi
        if [ -z "$BUNDLE_ID" ]; then
          BUNDLE_ID=$(sed -n '/<key>CFBundleIdentifier<\/key>/{n;s/.*<string>\(.*\)<\/string>.*/\1/p;}' ios/Runner/Info.plist 2>/dev/null || echo "")
        fi
        if [ -z "$BUNDLE_ID" ]; then
          if [ -f ios/Runner.xcodeproj/project.pbxproj ]; then
            BUNDLE_ID=$(grep PRODUCT_BUNDLE_IDENTIFIER ios/Runner.xcodeproj/project.pbxproj | head -1 | sed 's/.*= \(.*\);/\1/' | tr -d ' "' || echo "")
          fi
        fi
        if [ -z "$BUNDLE_ID" ]; then
          echo "Error: Could not determine Bundle ID"
          exit 1
        fi
        echo "bundle_identifier=$BUNDLE_ID" >> $GITHUB_OUTPUT
        echo "Final Bundle ID: $BUNDLE_ID"
        
    - name: Build IPA using Fastlane
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        BUNDLE_IDENTIFIER: ${{ steps.bundle_id.outputs.bundle_identifier }}
      run: |
        cd ios
        echo "Environment check:"
        echo "APPLE_ID is set: $([[ -n $APPLE_ID ]] && echo 'yes' || echo 'no')"
        echo "BUNDLE_IDENTIFIER: $BUNDLE_IDENTIFIER"
        if [ -z "$APPLE_ID" ]; then
          echo "Error: APPLE_ID secret is not set"
          exit 1
        fi
        if [ -z "$BUNDLE_IDENTIFIER" ]; then
          echo "Error: Bundle identifier is empty"
          exit 1
        fi
        fastlane sigh --app_identifier "$BUNDLE_IDENTIFIER" --username "$APPLE_ID" --skip_certificate_verification --development --force
        fastlane gym --scheme "Runner" --export_method "development" --clean --output_directory "./build" --output_name "Runner.ipa"
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: runner-ipa-${{ github.run_number }}
        path: ios/build/Runner.ipa
        retention-days: 30
        
    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          ios/fastlane/logs/
          ~/Library/Logs/gym/
        retention-days: 7
