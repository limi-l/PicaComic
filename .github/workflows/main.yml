name: Build iOS IPA
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-13
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: |
        sudo xcode-select --print-path
        xcodebuild -version
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        
    - name: Clean Flutter
      run: |
        flutter clean
        cd ios
        rm -rf Pods
        rm -f Podfile.lock
        cd ..
        
    - name: Flutter pub get
      run: flutter pub get
      
    - name: Patch Podfile for Swift Concurrency
      run: |
        cat > ios/temp_post_install.rb << 'EOF'
        post_install do |installer|
          installer.pods_project.targets.each do |target|
            flutter_additional_ios_build_settings(target)
            
            target.build_configurations.each do |config|
              config.build_settings['SWIFT_STRICT_CONCURRENCY'] = 'minimal'
              config.build_settings['SWIFT_UPCOMING_FEATURE_CONCURRENCY'] = 'NO'
            end
          end
        end
        EOF
        
        sed -i.bak '/post_install do |installer|/,/^end$/d' ios/Podfile
        cat ios/temp_post_install.rb >> ios/Podfile
        rm ios/temp_post_install.rb
        
        echo "Modified Podfile:"
        cat ios/Podfile
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install --repo-update
        
    - name: Install Ruby and Fastlane
      run: |
        gem install fastlane --user-install
        echo "$HOME/.gem/ruby/$(ruby -e 'puts RUBY_VERSION')/bin" >> $GITHUB_PATH
        
    - name: Get Bundle Identifier
      id: bundle_id
      run: |
        BUNDLE_ID=$(/usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" ios/Runner/Info.plist 2>/dev/null)
        
        if [ -z "$BUNDLE_ID" ] || [ "$BUNDLE_ID" = "" ]; then
          echo "PlistBuddy failed, trying alternative method..."
          BUNDLE_ID=$(plutil -p ios/Runner/Info.plist | grep CFBundleIdentifier | cut -d'"' -f4)
        fi
        
        if [ -z "$BUNDLE_ID" ] || [ "$BUNDLE_ID" = "" ]; then
          echo "plutil failed, trying XML parsing..."
          BUNDLE_ID=$(sed -n '/<key>CFBundleIdentifier<\/key>/{n;s/.*<string>\(.*\)<\/string>.*/\1/p;}' ios/Runner/Info.plist)
        fi
        
        if [ -z "$BUNDLE_ID" ] || [ "$BUNDLE_ID" = "" ]; then
          echo "Error: Failed to extract Bundle ID from Info.plist"
          cat ios/Runner/Info.plist
          exit 1
        fi
        
        echo "bundle_identifier=$BUNDLE_ID" >> $GITHUB_OUTPUT
        echo "Successfully extracted Bundle ID: $BUNDLE_ID"
        
    - name: Build IPA using Fastlane
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        cd ios
        
        echo "Using Bundle ID: ${{ steps.bundle_id.outputs.bundle_identifier }}"
        
        fastlane sigh \
          --app_identifier "${{ steps.bundle_id.outputs.bundle_identifier }}" \
          --username "$APPLE_ID" \
          --skip_certificate_verification \
          --development \
          --force
        
        fastlane gym \
          --scheme "Runner" \
          --export_method "development" \
          --clean \
          --output_directory "./build" \
          --output_name "Runner.ipa"
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: runner-ipa-${{ github.run_number }}
        path: ios/build/Runner.ipa
        retention-days: 30
        
    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          ios/fastlane/logs/
          ~/Library/Logs/gym/
        retention-days: 7
